{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-638573f7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\", \"selected\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"select\", {\n    value: $props.modelValue,\n    class: \"custom-select\",\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.formatedItems, item => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: item.value,\n      value: item.value,\n      selected: item.selected\n    }, _toDisplayString(item.label), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","value","$props","modelValue","class","onInput","_cache","$event","_ctx","$emit","target","_Fragment","_renderList","$options","formatedItems","item","key","selected","label","_hoisted_2"],"sources":["D:\\System\\Users\\Semenov\\Documents\\GitHub\\untitled-vue\\src\\components\\shared\\CustomSelect.vue"],"sourcesContent":["<template>\r\n  <select\r\n    :value=\"modelValue\"\r\n    class=\"custom-select\"\r\n    @input=\"$emit('update:modelValue', $event.target.value)\"\r\n  >\r\n    <option\r\n      v-for=\"item in formatedItems\"\r\n      :key=\"item.value\"\r\n      :value=\"item.value\"\r\n      :selected=\"item.selected\"\r\n    >\r\n      {{ item.label }}\r\n    </option>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CustomSelect\",\r\n  props: {\r\n    items: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    modelValue: String,\r\n  },\r\n\r\n  emits: [\"update:modelValue\"],\r\n  computed: {\r\n    formatedItems() {\r\n      return this.items.map((item) => {\r\n        return typeof item === \"object\" ? item : { value: item, label: item };\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../assets/scss/variables.scss\";\r\n.custom-select {\r\n  min-height: 40px;\r\n  border: 2px solid $main-color;\r\n  font-size: 18px;\r\n  outline: none;\r\n  padding: 8px 15px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;uBACEA,mBAAA,CAaS;IAZNC,KAAK,EAAEC,MAAA,CAAAC,UAAU;IAClBC,KAAK,EAAC,eAAe;IACpBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,sBAAsBF,MAAM,CAACG,MAAM,CAACT,KAAK;yBAEtDD,mBAAA,CAOSW,SAAA,QAAAC,WAAA,CANQC,QAAA,CAAAC,aAAa,EAArBC,IAAI;yBADbf,mBAAA,CAOS;MALNgB,GAAG,EAAED,IAAI,CAACd,KAAK;MACfA,KAAK,EAAEc,IAAI,CAACd,KAAK;MACjBgB,QAAQ,EAAEF,IAAI,CAACE;wBAEbF,IAAI,CAACG,KAAK,wBAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}